import os
from easydict import EasyDict as edict
import time
import torch

# init
__C = edict()
cfg = __C

#------------------------------TRAIN------------------------
__C.SEED = 3035 # random seed,  for reproduction
__C.DATASET = 'SHHB' # dataset selection: GCC, SHHA, SHHB, UCF50, QNRF, WE, Mall, UCSD

if __C.DATASET == 'UCF50':# only for UCF50
	from datasets.UCF50.setting import cfg_data
	__C.VAL_INDEX = cfg_data.VAL_INDEX 

if __C.DATASET == 'GCC':# only for GCC
	from datasets.GCC.setting import cfg_data
	__C.VAL_MODE = cfg_data.VAL_MODE 


__C.NET = 'Res50' # net selection: MCNN, AlexNet, VGG, VGG_DECODER, Res50, CSRNet, SANet, Res101_SFCN

__C.PRE_GCC = False # use the pretrained model on GCC dataset
__C.PRE_GCC_MODEL = 'path to model' # path to model

__C.RESUME = False # contine training
__C.RESUME_PATH = './exp/SHHB_ResNet/latest_state.pth' #

__C.EXISTS_GPU = True
if __C.EXISTS_GPU:
	__C.GPU_ID = [0] # sigle gpu: [0], [1] ...; multi gpus: [0,1]
else:
	__C.GPU_ID = []

# learning rate settings
__C.LR = 1e-5 # learning rate
__C.LR_DECAY = 0.9 # decay rate
__C.LR_DECAY_START = 50 # when training epoch is more than it, the learning rate will be begin to decay
__C.NUM_EPOCH_LR_DECAY = 50 # decay frequency
__C.MAX_EPOCH = 500

# multi-task learning weights, no use for single model, such as MCNN, VGG, VGG_DECODER, Res50, CSRNet, and so on

__C.LAMBDA_1 = 1e-4# SANet:0.001 CMTL 0.0001


# print 
__C.PRINT_FREQ = 10

now = time.strftime("%m-%d_%H-%M", time.localtime())

__C.EXP_NAME = now \
			 + '_' + __C.DATASET \
             + '_' + __C.NET \
             + '_' + str(__C.LR)

if __C.DATASET == 'UCF50':
	__C.EXP_NAME += '_' + str(__C.VAL_INDEX)	

if __C.DATASET == 'GCC':
	__C.EXP_NAME += '_' + __C.VAL_MODE	

__C.EXP_PATH = '/graphics/scratch2/students/langstei/train_logs/exp' # the path of logs, checkpoints, and current codes


#------------------------------VAL------------------------
__C.VAL_DENSE_START = 50
__C.VAL_FREQ = 10 # Before __C.VAL_DENSE_START epoches, the freq is set as __C.VAL_FREQ

#------------------------------VIS------------------------
__C.VISIBLE_NUM_IMGS = 1 #  must be 1 for training images with the different sizes



#================================================================================
#================================================================================
#================================================================================  




===============+++++++++++++++===============

all_ep_1_mae_71.8_mse_111.7
    [mae 71.81 mse 111.68], [val loss 0.0125]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_11_mae_16.4_mse_24.6
    [mae 16.44 mse 24.57], [val loss 0.0070]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_21_mae_10.5_mse_18.5
    [mae 10.45 mse 18.49], [val loss 0.0067]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_41_mae_10.9_mse_16.6
    [mae 10.91 mse 16.61], [val loss 0.0064]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_55_mae_10.2_mse_18.9
    [mae 10.19 mse 18.86], [val loss 0.0064]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_60_mae_9.0_mse_16.0
    [mae 9.00 mse 15.97], [val loss 0.0063]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_61_mae_9.3_mse_15.4
    [mae 9.30 mse 15.44], [val loss 0.0063]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_69_mae_9.6_mse_15.0
    [mae 9.62 mse 15.04], [val loss 0.0063]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_83_mae_8.8_mse_15.3
    [mae 8.84 mse 15.28], [val loss 0.0063]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_93_mae_9.2_mse_14.9
    [mae 9.21 mse 14.87], [val loss 0.0063]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_94_mae_8.7_mse_15.0
    [mae 8.74 mse 15.01], [val loss 0.0063]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_106_mae_8.0_mse_13.2
    [mae 8.05 mse 13.24], [val loss 0.0062]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_116_mae_8.0_mse_13.1
    [mae 7.97 mse 13.11], [val loss 0.0062]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_156_mae_7.4_mse_12.2
    [mae 7.39 mse 12.21], [val loss 0.0063]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_210_mae_7.6_mse_12.1
    [mae 7.56 mse 12.06], [val loss 0.0064]
===============+++++++++++++++===============

===============+++++++++++++++===============

all_ep_287_mae_7.2_mse_12.3
    [mae 7.25 mse 12.28], [val loss 0.0064]
===============+++++++++++++++===============

